package musicplayer;


import android.app.ProgressDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.CoreConnectionPNames;
import org.apache.http.util.EntityUtils;
import musicplayer.dynamicBackGround.VideoBackground;

public class LoginActivity extends BaseActivity {

    private VideoBackground login_videoview = null;
    private int curVolume;
    private static int login_status = 0;//��¼״̬
    private Button b_login;
    private CheckBox remember_user,remember_password;
    private TextView login_pas;
    private TextView login_user;
    private String passwordStr;//�����������
    private String userStr;//����û���
    private SharedPreferences.Editor sPreEditor_usr,sPreEditor_password;
    private ProgressDialog progDia1;
    private ImageButton login_ban_music;
    private int flag_ban_music = 0;//���ƽ�ֹ����ͼƬ�õ�
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.w("LoginActivity","onCreate��ִ����");
        Log.w("LoginActivity","login_status��"+login_status);
        if(login_status == 0){//δ��¼���
            setContentView(R.layout.activity_login);
            b_login = findViewById(R.id.button_login);//��¼��ťʵ����
            initButtonDeal();//�����¼��ť���¼�
            initBackground();//��ʼ����̬����
            loadDefaultMsg();//����Ĭ���û���������
            ban_music_button();
        }else{//�Ѿ���½��  ��������Ϊ�˵�¼���˳�app�ٽ��벻��Ҫ�ٴε�¼
            jumpToNextPage();
        }
    }
    public void jumpToNextPage(){
        Intent intent = new Intent(LoginActivity.this, DisplayActivity.class);
        intent.putExtra("userName", userStr);
        startActivity(intent);
    }
    public void initButtonDeal(){
        //����ȷ����ť���¼�
        b_login.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                login_pas = findViewById(R.id.login_pas);//�����ı������
                login_user = findViewById(R.id.login_user);//�û����ı������
                userStr = login_user.getText().toString();//���������û������ı���
                passwordStr = login_pas.getText().toString();//�����������루�ı���
                if(!userStr.equals("")&&!passwordStr.equals("")){//�������Ϊ��
                    //�������߳�ȥ����������е�����
                    sendRequestWithHttpClient(userStr,passwordStr);
                    //��ʾ  ȦȦ  ���ӷ�������...
                    progDia1 = new ProgressDialog(LoginActivity.this);
                    progDia1.setMessage("���ӷ�������...");
                    progDia1.show();
                    progDia1.setCanceledOnTouchOutside(false);//�����ʾȦ�ⲿʱ���Ȧ������ʧ����
                    progDia1.setCancelable(true);//���ý������Ƿ���԰��˻ؼ�ȡ��
                }else{
                    Toast.makeText(LoginActivity.this,
                            "�˺š����벻��Ϊ�գ�",Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    //������������ķ���
    public void sendRequestWithHttpClient(final String username,final  String password){
        new Thread(new Runnable() {
            @Override
            public void run() {
                //��HttpClient���������Ϊ�岽
                //��һ��������HttpClient����
                HttpClient httpClient = new DefaultHttpClient();
                //����ʱ
                httpClient.getParams().setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,
                        10000);
                //��ȡ��ʱ
                httpClient.getParams().setParameter(CoreConnectionPNames.SO_TIMEOUT, 10000 );
                //�ڶ�����������������Ķ��󣬲����Ƿ��ʵķ������ĵ�ַ
                /*�����run���������������ӵ�ͬһ����������
                URL��IP��ֵ����run�����������ľ�������ַ*/
                //�����ģ����������в��ԣ���ô IP��ֵ����Ϊ 10.0.2.2
                String LOGIN_URL = "http://192.168.31.174:8080/Demo_Login/android/" +
                        "loginServlet.jsp?";
                LOGIN_URL = LOGIN_URL+"name="+username+"&password="+password;
                HttpGet httpGet = new HttpGet(LOGIN_URL);
                try {
                    //��������ִ�����󣬲���ȡ��������������Ӧ����
                    HttpResponse httpResponse = httpClient.execute(httpGet);
                    //���Ĳ��������Ӧ��״̬�Ƿ����������״̬���ֵ��200��ʾ����
                    if(httpResponse.getStatusLine().getStatusCode() ==200){
                        //���岽������Ӧ������ȡ�����ݣ��ŵ�entity��
                        HttpEntity entity = httpResponse.getEntity();
                        //������ת��Ϊ�ַ���
                        String response = EntityUtils.toString(entity,"utf-8");

                        //�����߳��н�Message�����ͳ�ȥ
                        Message message = Message.obtain();
                        message.what = 1;//�����ȡ���ݻ�ȡ�ɹ�
                        message.obj = response;
                        handler.sendMessage(message);

                        //����Ƿ���Ҫ��ס�û���
                        sPreEditor_usr = getSharedPreferences("username_data",
                                MODE_PRIVATE).edit();
                        if (remember_user.isChecked()) {
                            sPreEditor_usr.putString("name", userStr);//��������
                        } else {
                            sPreEditor_usr.clear();//�������
                        }
                        sPreEditor_usr.apply();//��Ч

                        //����Ƿ���Ҫ��ס����
                        sPreEditor_password = getSharedPreferences("password_data",
                                MODE_PRIVATE).edit();
                        if(remember_password.isChecked()){
                            sPreEditor_password.putString("password",passwordStr);//����
                        }else{
                            sPreEditor_password.clear();//���
                        }
                        sPreEditor_password.apply();//��Ч
                    }
                }catch (Exception e){
                    //��ȡ���������ݳ���
                    Message message = Message.obtain();
                    message.what = 0;//�����ȡ���ݳ���
                    handler.sendMessage(message);
                    e.printStackTrace();
                }
            }
        }).start();
    }

    private Handler handler = new Handler(){
        @Override
        public void handleMessage(Message msg){
            super.handleMessage(msg);
            progDia1.dismiss();
            switch (msg.what){
                case 1://��ȡ�������ɹ�
                    String reponse = (String) msg.obj;
                    //���������֤�ɹ�
                    if(reponse.contains(":1")){
                        jumpToNextPage();
                        login_status = 1;
                    }else{
                        Toast.makeText(LoginActivity.this, "�˺���֤ʧ�ܣ������ԣ�", Toast.LENGTH_SHORT).show();
                    }
                    break;
                case 0://��ȡ����������ʧ��
                    Toast.makeText(LoginActivity.this, "��ȡ����������ʧ��", Toast.LENGTH_SHORT).show();
                    break;
                default:
                    break;
            }
        }
    };

    public void initBackground() {
        //��VideoView�ؼ�
        login_videoview = findViewById(R.id.login_videoview); //������Ƶ����
        login_videoview.setVideoURI(Uri.parse("android.resource://" + getPackageName() +
                "/" + R.raw.five));
        // ����
        login_videoview.start();
        //ѭ������  ����һ����ý���ļ�������ϣ������յ�ʱ���õĻص�
        login_videoview.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
            @Override
            public void onCompletion(MediaPlayer mediaPlayer) {
                login_videoview.start();
            }
        });
    }

    public void loadDefaultMsg(){//����Ĭ���û���������

        remember_user = findViewById(R.id.remember_user);
        login_user = findViewById(R.id.login_user);
        //����Ĭ���û���
        SharedPreferences pref = getSharedPreferences("username_data", MODE_PRIVATE);
        String default_name = pref.getString("name", "");
        if (!default_name.isEmpty()) {
            login_user.setText(default_name);
        }

        remember_password = findViewById(R.id.remember_password);
        login_pas = findViewById(R.id.login_pas);
        //����Ĭ������
        SharedPreferences pref_pas = getSharedPreferences("password_data", MODE_PRIVATE);
        String default_password = pref_pas.getString("password", "");
        if (!default_password.isEmpty()) {
            login_pas.setText(default_password);
        }
    }
    public void ban_music_button(){//��ֹ�������ֲ���
        login_ban_music = findViewById(R.id.login_ban_music);
        login_ban_music.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if(flag_ban_music == 0){//���ڲ���
                    login_ban_music.setImageDrawable(getResources().getDrawable(R.drawable.music_false));
                    flag_ban_music = 1;
                    //��ֹ����֮ǰ���ص�ǰ����   ��дVideoBackground����
                    curVolume = login_videoview.setVolume(0);
                }else{
                    login_ban_music.setImageDrawable(getResources().getDrawable(R.drawable.music_true));
                    flag_ban_music = 0;
                    login_videoview.setVolume(curVolume);
                }
            }
        });
    }
    public static void setStatusMusicPlayer(int login_status) {//��̨����MusicService�����õ�
        LoginActivity.login_status = login_status;
    }
    //������������
    @Override
    protected void onRestart() {
        super.onRestart();
        Log.w("LoginActivity","onRestart��ִ����");
        initBackground();
    }
    //��ֹ���������г���ʱ�򣬱��������ڲ���
    @Override
    protected void onStop() {
        super.onStop();
        if (login_videoview!=null)
        login_videoview.stopPlayback();
    }
}